# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, disko, ... }:

{
  imports = [
    # ../disko/luks-lvm.nix
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd = {
      availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ]; 
      kernelModules = [ "dm-snapshot" ];
      luks.devices = {
        crypted = {
          device = "/dev/nvme0n1p3";
          preLVM = true;
        };
      };
    };
    kernelModules = [ "kvm-intel" ];
    kernelParams = [ "acpi_osi=linux" ];
    extraModulePackages = [ ];
    kernelPackages = lib.mkOverride pkgs.linuxPackages_latest; #pkgs.linuxKernel.kernels.linux_6_2;
    loader = {
      efi.canTouchEfiVariables = true;
      grub = {
        enable = true;
        version = 2;
        efiSupport = true;
        devices =[ "/dev/nvme0n1" ];
      };
    };
  };
  disko.devices = import ../disko/luks-lvm.nix {
#    lib = nixpkgs.lib;
    disks = [ "/dev/nvme0n1" ]; # replace this with your disk name i.e. /dev/nvme0n1
  };
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.hostName = "creatorforge";

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  
}